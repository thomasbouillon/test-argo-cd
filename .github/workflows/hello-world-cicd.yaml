name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  # detect-changes:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     changes: ${{ steps.check.outputs.changes }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Check for changes in app directory
  #       id: check
  #       run: |
  #         if git diff --name-only HEAD^1 HEAD | grep '^\(app,.github\)/'; then
  #           echo "changes=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "changes=false" >> $GITHUB_OUTPUT
  #         fi

  build:
    # needs: detect-changes
    # if: needs.detect-changes.outputs.changes == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write
    outputs:
      image: "${{ steps.build-push.outputs.imageid }}:${{ steps.build-push.outputs.digest }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        id: build-push
        uses: docker/build-push-action@v2
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/my-static-website:latest
          cache-from: type=gha,scope=my-static-website
          cache-to: type=gha,mode=max,scope=my-static-website

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: production

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: download yq
        env:
          VERSION: v4.30.8
          BINARY: yq_linux_amd64
        run: |
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |\
          tar xz && mv ${BINARY} /usr/local/bin/yq

      - name: Update image in deployment.yaml
        env:
          IMAGE: ${{ needs.build.outputs.image }}
        run: |
          yq -i e '.spec.template.spec.containers[0].image = strenv(IMAGE)' ./hello-world/templates/app.yaml

      - name: Check for changes
        run: |
          if git diff --exit-code ./hello-world/templates/app.yaml; then
            echo "No changes to commit"
            exit 0
          else
            echo "Changes detected"
          fi

      - name: Commit and push changes
        run: |
          git add ./hello-world/templates/app.yaml
          git commit -m "Update image to $IMAGE"
          git push origin production
    